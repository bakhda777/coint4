#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —Å –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º 'risk_per_position_pct'
–≤ walk_forward_orchestrator.py
"""

import sys
sys.path.append('/Users/admin/Desktop/coint4/src')

from src.coint2.utils.config import AppConfig
from src.coint2.pipeline.walk_forward_orchestrator import run_walk_forward
from datetime import datetime

def test_walk_forward_risk_fix():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —Å risk_per_position_pct"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —Å risk_per_position_pct...")
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    from src.coint2.utils.config import (
        PairSelectionConfig, PortfolioConfig, BacktestConfig, 
        WalkForwardConfig, DataProcessingConfig
    )
    from pathlib import Path
    
    try:
        cfg = AppConfig(
            data_dir=Path('/Users/admin/Desktop/coint4'),
            results_dir=Path('/tmp/test_results'),
            portfolio=PortfolioConfig(
                initial_capital=10000.0,
                risk_per_position_pct=0.02,
                max_active_positions=5
            ),
            pair_selection=PairSelectionConfig(
                lookback_days=1,
                coint_pvalue_threshold=0.05,
                ssd_top_n=3,
                min_half_life_days=1,
                max_half_life_days=100,
                min_mean_crossings=1
            ),
            backtest=BacktestConfig(
                 timeframe='15min',
                 rolling_window=96,
                 zscore_threshold=1.5,
                 zscore_exit=0.8,
                 commission_pct=0.001,
                 slippage_pct=0.0005,
                 stop_loss_multiplier=2.0,
                 fill_limit_pct=0.1,
                 annualizing_factor=365
             ),
            walk_forward=WalkForwardConfig(
                start_date='2024-01-01',
                end_date='2024-01-02',
                training_period_days=1,
                testing_period_days=1,
                step_size_days=1
            )
        )
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º walk-forward –∞–Ω–∞–ª–∏–∑
        print("üöÄ –ó–∞–ø—É—Å–∫ walk-forward –∞–Ω–∞–ª–∏–∑–∞...")
        metrics = run_walk_forward(cfg)
        
        print(f"‚úÖ Walk-forward –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –ú–µ—Ç—Ä–∏–∫–∏: {metrics}")
        
        print("\nüéâ –£–°–ü–ï–•: –û—à–∏–±–∫–∞ —Å 'risk_per_position_pct' –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        print("‚úÖ PairBacktester —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_walk_forward_risk_fix()
    sys.exit(0 if success else 1)